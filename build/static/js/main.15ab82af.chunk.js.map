{"version":3,"sources":["index.js"],"names":["choose","choices","Math","floor","random","length","Square","props","className","value","onClick","Board","i","this","squares","winners","indexOf","renderSquare","React","Component","Game","state","history","Array","fill","xIsNext","stepNumber","PlayerX","localStorage","getItem","PlayerO","console","log","O","X","type","step","setState","slice","calculateWinner","winner","getNext","concat","status","current","moves","map","move","desc","id","jumpTo","getPlayer","square","_","handleClick","positions","placeholder","onChange","text","target","setItem","maxLength","defaultValue","emojiCompact","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"uNAMA,SAASA,EAAOC,GAEd,OAAOA,EADKC,KAAKC,MAAMD,KAAKE,SAAWH,EAAQI,SAIjD,SAASC,EAAOC,GACf,OACC,wBACCC,UACC,WAAaD,EAAME,QAAU,GAAK,SAAWF,EAAMC,UAEpDE,QAASH,EAAMG,QAJhB,SAMEH,EAAME,U,IAKJE,E,2KACQC,GAAI,IAAD,OACf,OACC,cAACN,EAAD,CACCG,MAAOI,KAAKN,MAAMO,QAAQF,GAC1BF,QAAS,WACR,EAAKH,MAAMG,QAAQE,IAEpBJ,UACCK,KAAKN,MAAMQ,UAC2B,IAAnCF,KAAKN,MAAMQ,QAAQC,QAAQJ,GAC1B,QAED,O,+BAON,OACC,gCACC,sBAAKJ,UAAU,YAAf,UACEK,KAAKI,aAAa,GAClBJ,KAAKI,aAAa,GAClBJ,KAAKI,aAAa,MAEpB,sBAAKT,UAAU,YAAf,UACEK,KAAKI,aAAa,GAClBJ,KAAKI,aAAa,GAClBJ,KAAKI,aAAa,MAEpB,sBAAKT,UAAU,YAAf,UACEK,KAAKI,aAAa,GAClBJ,KAAKI,aAAa,GAClBJ,KAAKI,aAAa,a,GAnCJC,IAAMC,WA0CpBC,E,kDACL,WAAYb,GAAQ,IAAD,uBAClB,cAAMA,IAEDc,MAAQ,CACZC,QAAS,CACR,CACCR,QAASS,MAAM,GAAGC,KAAK,QAGzBC,SAAS,EACTC,WAAY,GAGb,IAAMC,EAAUC,aAAaC,QAAQ,WAC/BC,EAAUF,aAAaC,QAAQ,WAdnB,OAelBE,QAAQC,IAAIL,EAASG,GACrB,EAAKT,MAAMY,EAAIH,GAAoB,IACnC,EAAKT,MAAMa,EAAIP,GAAoB,IAjBjB,E,sDAoBlB,OAAOd,KAAKQ,MAAMI,QAAU,IAAM,M,gCAEzBU,GACT,MAAa,MAATA,EACItB,KAAKQ,MAAMa,EACC,MAATC,EACHtB,KAAKQ,MAAMY,EAEXE,I,6BAGFC,GACNvB,KAAKwB,SAAS,CACbX,WAAYU,EACZX,QAASW,EAAO,IAAM,M,kCAGZxB,GACX,IAAMU,EAAUT,KAAKQ,MAAMC,QAAQgB,MAAM,EAAGzB,KAAKQ,MAAMK,WAAa,GAE9DZ,EADUQ,EAAQA,EAAQjB,OAAS,GACjBS,QAAQwB,QAC5BC,EAAgBzB,GAAS0B,QAAU1B,EAAQF,KAG/CE,EAAQF,GAAKC,KAAK4B,UAClB5B,KAAKwB,SAAS,CACbf,QAASA,EAAQoB,OAAO,CACvB,CACC5B,QAASA,KAGXY,WAAYJ,EAAQjB,OACpBoB,SAAUZ,KAAKQ,MAAMI,a,+BAGb,IAmBLkB,EAnBI,OACFrB,EAAUT,KAAKQ,MAAMC,QACrBsB,EAAUtB,EAAQT,KAAKQ,MAAMK,YAC7Bc,EAASD,EAAgBK,EAAQ9B,SAEjC+B,EAAQvB,EAAQwB,KAAI,SAACV,EAAMW,GAChC,IAAIC,EAAOD,EACRA,EAAO,KAAOA,EAAO,EAAI,EAAK1B,MAAMa,EAAI,EAAKb,MAAMY,GACnD,eACH,OACC,oBACCgB,GAAIF,IAAS,EAAK1B,MAAMK,WAAa,UAAY,GADlD,SAIC,wBAAQhB,QAAS,kBAAM,EAAKwC,OAAOH,IAAnC,SAA2CC,KAFtCD,MAcR,OALCJ,EADGH,EAAOA,OACD3B,KAAKsC,UAAUX,EAAOA,QAAU,cAEhC,gBAAkB3B,KAAKsC,UAAUtC,KAAK4B,WAI/C,sBAAKjC,UAAU,OAAf,UACC,gEACA,qBAAKA,UAAU,aAAf,SACC,cAACG,EAAD,CACCG,QAAS8B,EAAQ9B,QAAQgC,KAAI,SAACM,GAAD,OAAY,SAACC,GACzC,OAAO,EAAKF,UAAUC,OAEvB1C,QAAS,SAACE,GAAD,OAAO,EAAK0C,YAAY1C,IACjCG,QAASyB,EAAOe,cAGlB,sBAAK/C,UAAU,YAAf,UACC,qBAAKyC,GAAG,SAAR,SAAkBN,IAClB,6BAAKE,OAEN,sBAAKrC,UAAU,UAAf,UACC,uBACC2B,KAAK,OACLqB,YAAY,IACZC,SAAU,SAACC,GACV,EAAKrB,SAAS,CACbH,EAAGwB,EAAKC,OAAOlD,MAAQiD,EAAKC,OAAOlD,MAAQ,MAE5CmB,aAAagC,QAAQ,UAAWF,EAAKC,OAAOlD,QAE7CoD,UAAU,IACVpD,MAAOI,KAAKQ,MAAMa,EAClB4B,aAAcjD,KAAKQ,MAAMa,IAE1B,uBACCC,KAAK,OACLqB,YAAY,IACZC,SAAU,SAACC,GACV,EAAKrB,SAAS,CACbJ,EAAGyB,EAAKC,OAAOlD,MAAQiD,EAAKC,OAAOlD,MAAQ,MAE5CmB,aAAagC,QAAQ,UAAWF,EAAKC,OAAOlD,QAE7CqD,aAAcjD,KAAKQ,MAAMY,EACzBxB,MAAOI,KAAKQ,MAAMY,EAClB4B,UAAU,MAEX,qBAAKrD,UAAU,oBAAf,SACC,wBAAQA,UAAU,cAAcE,QAAS,SAAA2C,GACxC,EAAKhB,SAAS,CACbH,EAAGlC,EAAO+D,GACV9B,EAAGjC,EAAO+D,MAHZ,sC,GA9Ha7C,IAAMC,WA2IzB,SAASoB,EAAgBzB,GAWxB,IAVA,IAAMkD,EAAQ,CACb,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAECpD,EAAI,EAAGA,EAAIoD,EAAM3D,OAAQO,IAAK,CAAC,IAAD,cACpBoD,EAAMpD,GADc,GAC/BqD,EAD+B,KAC5BC,EAD4B,KACzBC,EADyB,KAEtC,GACCrD,EAAQmD,IACRnD,EAAQmD,KAAOnD,EAAQoD,IACvBpD,EAAQmD,KAAOnD,EAAQqD,GAEvB,MAAO,CAAE3B,OAAQ1B,EAAQmD,GAAIV,UAAWS,EAAMpD,IAGhD,MAAO,CAAE4B,OAAQ,KAAMe,UAAW,MAKnCa,IAASC,OAAO,cAACjD,EAAD,IAAUkD,SAASC,eAAe,U","file":"static/js/main.15ab82af.chunk.js","sourcesContent":["import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport emojiCompact from 'emoji.json/emoji-compact.json'\r\n\r\n\r\nfunction choose(choices) {\r\n  var index = Math.floor(Math.random() * choices.length);\r\n  return choices[index];\r\n}\r\n\r\nfunction Square(props) {\r\n\treturn (\r\n\t\t<button\r\n\t\t\tclassName={\r\n\t\t\t\t\"square \" + (props.value() ? \"\" : \"empty\") + props.className\r\n\t\t\t}\r\n\t\t\tonClick={props.onClick}\r\n\t\t>\r\n\t\t\t{props.value()}\r\n\t\t</button>\r\n\t);\r\n}\r\n\r\nclass Board extends React.Component {\r\n\trenderSquare(i) {\r\n\t\treturn (\r\n\t\t\t<Square\r\n\t\t\t\tvalue={this.props.squares[i]}\r\n\t\t\t\tonClick={() => {\r\n\t\t\t\t\tthis.props.onClick(i);\r\n\t\t\t\t}}\r\n\t\t\t\tclassName={\r\n\t\t\t\t\tthis.props.winners\r\n\t\t\t\t\t\t? this.props.winners.indexOf(i) !== -1\r\n\t\t\t\t\t\t\t? \"winer\"\r\n\t\t\t\t\t\t\t: \"\"\r\n\t\t\t\t\t\t: \"\"\r\n\t\t\t\t}\r\n\t\t\t/>\r\n\t\t);\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<div className=\"board-row\">\r\n\t\t\t\t\t{this.renderSquare(0)}\r\n\t\t\t\t\t{this.renderSquare(1)}\r\n\t\t\t\t\t{this.renderSquare(2)}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"board-row\">\r\n\t\t\t\t\t{this.renderSquare(3)}\r\n\t\t\t\t\t{this.renderSquare(4)}\r\n\t\t\t\t\t{this.renderSquare(5)}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"board-row\">\r\n\t\t\t\t\t{this.renderSquare(6)}\r\n\t\t\t\t\t{this.renderSquare(7)}\r\n\t\t\t\t\t{this.renderSquare(8)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nclass Game extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\thistory: [\r\n\t\t\t\t{\r\n\t\t\t\t\tsquares: Array(9).fill(null),\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t\txIsNext: true,\r\n\t\t\tstepNumber: 0,\r\n\t\t};\r\n\r\n\t\tconst PlayerX = localStorage.getItem(\"PlayerX\");\r\n\t\tconst PlayerO = localStorage.getItem(\"PlayerO\");\r\n\t\tconsole.log(PlayerX, PlayerO);\r\n\t\tthis.state.O = PlayerO ? PlayerO : \"O\";\r\n\t\tthis.state.X = PlayerX ? PlayerX : \"X\";\r\n\t}\r\n\tgetNext() {\r\n\t\treturn this.state.xIsNext ? \"X\" : \"O\";\r\n\t}\r\n\tgetPlayer(type) {\r\n\t\tif (type === \"X\") {\r\n\t\t\treturn this.state.X;\r\n\t\t} else if (type === \"O\") {\r\n\t\t\treturn this.state.O;\r\n\t\t} else {\r\n\t\t\treturn type;\r\n\t\t}\r\n\t}\r\n\tjumpTo(step) {\r\n\t\tthis.setState({\r\n\t\t\tstepNumber: step,\r\n\t\t\txIsNext: step % 2 === 0,\r\n\t\t});\r\n\t}\r\n\thandleClick(i) {\r\n\t\tconst history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n\t\tconst current = history[history.length - 1];\r\n\t\tconst squares = current.squares.slice();\r\n\t\tif (calculateWinner(squares).winner || squares[i]) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsquares[i] = this.getNext();\r\n\t\tthis.setState({\r\n\t\t\thistory: history.concat([\r\n\t\t\t\t{\r\n\t\t\t\t\tsquares: squares,\r\n\t\t\t\t},\r\n\t\t\t]),\r\n\t\t\tstepNumber: history.length,\r\n\t\t\txIsNext: !this.state.xIsNext,\r\n\t\t});\r\n\t}\r\n\trender() {\r\n\t\tconst history = this.state.history;\r\n\t\tconst current = history[this.state.stepNumber];\r\n\t\tconst winner = calculateWinner(current.squares);\r\n\r\n\t\tconst moves = history.map((step, move) => {\r\n\t\t\tlet desc = move\r\n\t\t\t\t? move + \" \" + (move % 2 ? this.state.X : this.state.O)\r\n\t\t\t\t: \"üå±\";\r\n\t\t\treturn (\r\n\t\t\t\t<li\r\n\t\t\t\t\tid={move === this.state.stepNumber ? \"current\" : \"\"}\r\n\t\t\t\t\tkey={move}\r\n\t\t\t\t>\r\n\t\t\t\t\t<button onClick={() => this.jumpTo(move)}>{desc}</button>\r\n\t\t\t\t</li>\r\n\t\t\t);\r\n\t\t});\r\n\r\n\t\tlet status;\r\n\t\tif (winner.winner) {\r\n\t\t\tstatus = this.getPlayer(winner.winner) + \" a gagn√©\";\r\n\t\t} else {\r\n\t\t\tstatus = \"Next player: \" + this.getPlayer(this.getNext());\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"game\">\r\n\t\t\t\t<h1>Tic-Tac-Toe üïπÔ∏è</h1>\r\n\t\t\t\t<div className=\"game-board\">\r\n\t\t\t\t\t<Board\r\n\t\t\t\t\t\tsquares={current.squares.map((square) => (_) => {\r\n\t\t\t\t\t\t\treturn this.getPlayer(square);\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t\tonClick={(i) => this.handleClick(i)}\r\n\t\t\t\t\t\twinners={winner.positions}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"game-info\">\r\n\t\t\t\t\t<div id=\"status\">{status}</div>\r\n\t\t\t\t\t<ol>{moves}</ol>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"players\">\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tplaceholder=\"X\"\r\n\t\t\t\t\t\tonChange={(text) => {\r\n\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\tX: text.target.value ? text.target.value : \"X\",\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\tlocalStorage.setItem(\"PlayerX\", text.target.value);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tmaxLength=\"2\"\r\n\t\t\t\t\t\tvalue={this.state.X}\r\n\t\t\t\t\t\tdefaultValue={this.state.X}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tplaceholder=\"O\"\r\n\t\t\t\t\t\tonChange={(text) => {\r\n\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\tO: text.target.value ? text.target.value : \"O\",\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\tlocalStorage.setItem(\"PlayerO\", text.target.value);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tdefaultValue={this.state.O}\r\n\t\t\t\t\t\tvalue={this.state.O}\r\n\t\t\t\t\t\tmaxLength=\"2\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<div className=\"shuffle-container\">\r\n\t\t\t\t\t\t<button className=\"shuffle-btn\" onClick={_=>{\r\n\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\tX: choose(emojiCompact),\r\n\t\t\t\t\t\t\t\tO: choose(emojiCompact)\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}}>üé≤</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nfunction calculateWinner(squares) {\r\n\tconst lines = [\r\n\t\t[0, 1, 2],\r\n\t\t[3, 4, 5],\r\n\t\t[6, 7, 8],\r\n\t\t[0, 3, 6],\r\n\t\t[1, 4, 7],\r\n\t\t[2, 5, 8],\r\n\t\t[0, 4, 8],\r\n\t\t[2, 4, 6],\r\n\t];\r\n\tfor (let i = 0; i < lines.length; i++) {\r\n\t\tconst [a, b, c] = lines[i];\r\n\t\tif (\r\n\t\t\tsquares[a] &&\r\n\t\t\tsquares[a] === squares[b] &&\r\n\t\t\tsquares[a] === squares[c]\r\n\t\t) {\r\n\t\t\treturn { winner: squares[a], positions: lines[i] };\r\n\t\t}\r\n\t}\r\n\treturn { winner: null, positions: null };\r\n}\r\n\r\n// ========================================\r\n\r\nReactDOM.render(<Game />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}